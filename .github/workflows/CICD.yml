# GitHub actions to build and test the .NET project
name: .NET CICD Pipeline
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./CocovoitAPI

      - name: Build project
        run: dotnet build ./CocovoitAPI --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ./CocovoitAPI/CocovoitAPI.sln --no-build --verbosity normal
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format

      - name: Run dotnet-format
        run: dotnet format ./CocovoitAPI --verify-no-changes --verbosity diagnostic --include ./CocovoitAPI/CocovoitAPI/**/*.cs --exclude **/obj/**,**/bin/**

  deploy:
    runs-on: ubuntu-latest
    needs: [build, lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./CocovoitAPI/CocovoitAPI
          file: ./CocovoitAPI/CocovoitAPI/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cocovoit-api:latest

  deliver:
    runs-on: ubuntu-latest
    needs: [build, lint]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./CocovoitAPI/CocovoitAPI
          file: ./CocovoitAPI/CocovoitAPI/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cocovoit-api:${{ github.ref_name }}
    
